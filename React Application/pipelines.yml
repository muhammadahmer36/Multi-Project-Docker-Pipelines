trigger:
  branches:
    include:
    - master
pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - task: CmdLine@2
      displayName: 'Install dependencies and build'
      inputs:
        script: |
          npm install
          REM yarn install
          REM npm install -g yarn
          REM yarn workspace ecotime_pwa build:prod
          npm run build

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/dist'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: Deploy
#   jobs:
#   - job: Deploy
#     pool:
#       vmImage: windows-2019
#     steps:
#     - task: AzureAppServiceManage@0
#       inputs:
#         azureSubscription: 'AzureDevOpsConn'
#         Action: 'Stop Azure App Service'
#         WebAppName: 'Pwaappprodstage'

#     - task: DownloadBuildArtifacts@1
#       inputs:
#         buildType: 'current'
#         downloadType: 'single'
#         artifactName: 'drop'
#         downloadPath: '$(System.ArtifactsDirectory)'
#         cleanDestinationFolder: true

#     - task: AzureRmWebAppDeployment@4
#       inputs:
#         ConnectionType: 'AzureRM'
#         azureSubscription: 'AzureDevOpsConn'
#         appType: 'webApp'
#         WebAppName: 'Pwaappprodstage'
#         packageForLinux: '$(System.ArtifactsDirectory)/drop'
#         enableCustomDeployment: true
#         DeploymentType: 'webDeploy'
#     - task: AzureAppServiceManage@0
#       inputs:
#         azureSubscription: 'AzureDevOpsConn'
#         Action: 'Start Azure App Service'
#         WebAppName: 'Pwaappprodstage'

